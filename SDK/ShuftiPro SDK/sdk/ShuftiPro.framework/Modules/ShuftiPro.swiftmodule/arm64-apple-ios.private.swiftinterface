// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name ShuftiPro
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AVKit
import Accelerate
import CommonCrypto
import CoreGraphics
import CoreNFC
import CoreVideo
import CryptoKit
import Foundation
import MessageUI
import MobileCoreServices
import Network
import PDFKit
@_exported import ShuftiPro
import SocketIO
import Starscream
import Swift
import SystemConfiguration
import UIKit
import VideoToolbox
import WebKit
import _Concurrency
import _StringProcessing
@_hasMissingDesignatedInitializers public class UIUtilities {
  public static func imageOrientation(fromDevicePosition devicePosition: AVFoundation.AVCaptureDevice.Position = .back) -> UIKit.UIImage.Orientation
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Reachability {
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ShuftiPro : ObjectiveC.NSObject {
  public var fontColor: UIKit.UIColor
  public var buttonTextColor: UIKit.UIColor
  public var loaderPrimaryColor: UIKit.UIColor
  public var loaderSecondaryColor: UIKit.UIColor
  public var buttonBackgroundColor: UIKit.UIColor
  public var cameraFontColor: UIKit.UIColor
  @objc public func getUniqueReference() -> Swift.String
  @objc public func shuftiProVerification(requestObject dataObjectObj: [Swift.String : Any], authKeys: [Swift.String : Swift.String], parentVC pvc: UIKit.UIViewController, configs: [Swift.String : Any]?, completion: @escaping (_ result: Any) -> ())
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIImage {
  convenience public init?(pixelBuffer: CoreVideo.CVPixelBuffer)
  public func scaledImage(with size: CoreFoundation.CGSize) -> UIKit.UIImage?
}
public enum Constant {
}
extension UIKit.UIDevice {
  @_Concurrency.MainActor(unsafe) public static let modelName: Swift.String
}
extension Foundation.Data {
  public func sha256() -> Swift.String
}
extension Swift.String {
  public func sha256() -> Swift.String
}
